// The non-terminal that this expession language hooks to
@expression
// The id of an expression with one level lower precedence 
$lower
#this
// The string constant hook that will be replaced with this expression language in the hooking language.
%//INSERT_EXPRESSION_LANGUAGE_HERE

// Expression with  precedence 100 id expAdd
// and language term definition fragment : "(lower+tAdd)+lower"
// where lower will be replaced with the generated id of the expressions with precedenece 200 
!500:termTokenWithRestriction:id+(anyCaseEq+str)
!100:termAdd:lower+(plus+this)

//!200:termOr:(this+pipe)+lower

!200:termOr:lower+(pipe+this)

!300:termZeroOrMore:zeroOrMore+this
!300:termOneOrMore:oneOrMore+this
!400:termRef:id
!400:termBracket:(brOpen+expression)+brClose
!400:termEps:eps
